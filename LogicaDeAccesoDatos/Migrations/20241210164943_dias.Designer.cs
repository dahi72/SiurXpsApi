// <auto-generated />
using System;
using LogicaDeAccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaDeAccesoDatos.Migrations
{
    [DbContext(typeof(EContext))]
    [Migration("20241210164943_dias")]
    partial class dias
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActividadDia", b =>
                {
                    b.Property<int>("ActividadesId")
                        .HasColumnType("int");

                    b.Property<int>("DiasId")
                        .HasColumnType("int");

                    b.HasKey("ActividadesId", "DiasId");

                    b.HasIndex("DiasId");

                    b.ToTable("ActividadDia");
                });

            modelBuilder.Entity("AerolineaDia", b =>
                {
                    b.Property<int>("AerolinesId")
                        .HasColumnType("int");

                    b.Property<int>("DiasId")
                        .HasColumnType("int");

                    b.HasKey("AerolinesId", "DiasId");

                    b.HasIndex("DiasId");

                    b.ToTable("AerolineaDia");
                });

            modelBuilder.Entity("AeropuertoDia", b =>
                {
                    b.Property<int>("AeropuertosId")
                        .HasColumnType("int");

                    b.Property<int>("DiasId")
                        .HasColumnType("int");

                    b.HasKey("AeropuertosId", "DiasId");

                    b.HasIndex("DiasId");

                    b.ToTable("AeropuertoDia");
                });

            modelBuilder.Entity("DiaHotel", b =>
                {
                    b.Property<int>("DiasId")
                        .HasColumnType("int");

                    b.Property<int>("HotelesId")
                        .HasColumnType("int");

                    b.HasKey("DiasId", "HotelesId");

                    b.HasIndex("HotelesId");

                    b.ToTable("DiaHotel");
                });

            modelBuilder.Entity("DiaTraslado", b =>
                {
                    b.Property<int>("DiasId")
                        .HasColumnType("int");

                    b.Property<int>("TrasladosId")
                        .HasColumnType("int");

                    b.HasKey("DiasId", "TrasladosId");

                    b.HasIndex("TrasladosId");

                    b.ToTable("DiaTraslado");
                });

            modelBuilder.Entity("DiaVuelo", b =>
                {
                    b.Property<int>("DiasId")
                        .HasColumnType("int");

                    b.Property<int>("VuelosId")
                        .HasColumnType("int");

                    b.HasKey("DiasId", "VuelosId");

                    b.HasIndex("VuelosId");

                    b.ToTable("DiaVuelo");
                });

            modelBuilder.Entity("GrupoDeViajeCiudadesDestino", b =>
                {
                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoDeViajeId")
                        .HasColumnType("int");

                    b.HasKey("CiudadId", "GrupoDeViajeId");

                    b.HasIndex("GrupoDeViajeId");

                    b.ToTable("GrupoDeViajeCiudadesDestino");
                });

            modelBuilder.Entity("GrupoDeViajePaisesDestino", b =>
                {
                    b.Property<int>("GrupoDeViajeId")
                        .HasColumnType("int");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("GrupoDeViajeId", "PaisId");

                    b.HasIndex("PaisId");

                    b.ToTable("GrupoDeViajePaisesDestino");
                });

            modelBuilder.Entity("GrupoDeViajeUsuario", b =>
                {
                    b.Property<int>("GruposComoViajeroId")
                        .HasColumnType("int");

                    b.Property<int>("ViajerosId")
                        .HasColumnType("int");

                    b.HasKey("GruposComoViajeroId", "ViajerosId");

                    b.HasIndex("ViajerosId");

                    b.ToTable("GrupoDeViajeUsuarios", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Opcional")
                        .HasColumnType("bit");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Aerolinea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaginaWeb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aerolineas");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Aeropuerto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaginaWeb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("PaisId");

                    b.ToTable("Aeropuertos");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisCodigoIso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Dia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItinerarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItinerarioId");

                    b.ToTable("Dia");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.GrupoDeViaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoordinadorId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoGrupo")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoordinadorId");

                    b.ToTable("GruposDeViaje");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("CheckIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("CheckOut")
                        .HasColumnType("time");

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("PaisId");

                    b.ToTable("Hoteles");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Itinerario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoDeViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrupoDeViajeId");

                    b.ToTable("Itinerarios");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.TipoDeTraslado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposDeTraslado");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Traslado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Horario")
                        .HasColumnType("time");

                    b.Property<string>("LugarDeEncuentro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDeTrasladoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDeTrasladoId");

                    b.ToTable("Traslados");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DebeCambiarContrasena")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pasaporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasaporteDocumentoRuta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SeguroDeViajeDocumentoRuta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacunasDocumentoRuta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisaDocumentoRuta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Vuelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("Horario")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vuelos");
                });

            modelBuilder.Entity("LogicaNegocio.TokenRevocado", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Expiracion")
                        .HasColumnType("datetime2");

                    b.HasKey("Token");

                    b.ToTable("TokensRevocados");
                });

            modelBuilder.Entity("ActividadDia", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Actividad", null)
                        .WithMany()
                        .HasForeignKey("ActividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Dia", null)
                        .WithMany()
                        .HasForeignKey("DiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AerolineaDia", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Aerolinea", null)
                        .WithMany()
                        .HasForeignKey("AerolinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Dia", null)
                        .WithMany()
                        .HasForeignKey("DiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AeropuertoDia", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Aeropuerto", null)
                        .WithMany()
                        .HasForeignKey("AeropuertosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Dia", null)
                        .WithMany()
                        .HasForeignKey("DiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiaHotel", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Dia", null)
                        .WithMany()
                        .HasForeignKey("DiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Hotel", null)
                        .WithMany()
                        .HasForeignKey("HotelesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiaTraslado", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Dia", null)
                        .WithMany()
                        .HasForeignKey("DiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Traslado", null)
                        .WithMany()
                        .HasForeignKey("TrasladosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiaVuelo", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Dia", null)
                        .WithMany()
                        .HasForeignKey("DiasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Vuelo", null)
                        .WithMany()
                        .HasForeignKey("VuelosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoDeViajeCiudadesDestino", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Ciudad", null)
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.GrupoDeViaje", null)
                        .WithMany()
                        .HasForeignKey("GrupoDeViajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoDeViajePaisesDestino", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.GrupoDeViaje", null)
                        .WithMany()
                        .HasForeignKey("GrupoDeViajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Pais", null)
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoDeViajeUsuario", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.GrupoDeViaje", null)
                        .WithMany()
                        .HasForeignKey("GruposComoViajeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Usuario", null)
                        .WithMany()
                        .HasForeignKey("ViajerosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Aeropuerto", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Ciudad", "Ciudad")
                        .WithMany("Aeropuertos")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Pais", "Pais")
                        .WithMany("Aeropuertos")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Ciudad", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Pais", "Pais")
                        .WithMany("Ciudades")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Dia", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Itinerario", "Itinerario")
                        .WithMany("Dias")
                        .HasForeignKey("ItinerarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Itinerario");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.GrupoDeViaje", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Usuario", "Coordinador")
                        .WithMany("GruposComoCoordinador")
                        .HasForeignKey("CoordinadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Coordinador");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Hotel", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Ciudad", "Ciudad")
                        .WithMany("Hoteles")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Dominio.Pais", "Pais")
                        .WithMany("Hoteles")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Itinerario", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.GrupoDeViaje", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoDeViajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Traslado", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.TipoDeTraslado", null)
                        .WithMany("Traslados")
                        .HasForeignKey("TipoDeTrasladoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Ciudad", b =>
                {
                    b.Navigation("Aeropuertos");

                    b.Navigation("Hoteles");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Itinerario", b =>
                {
                    b.Navigation("Dias");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Pais", b =>
                {
                    b.Navigation("Aeropuertos");

                    b.Navigation("Ciudades");

                    b.Navigation("Hoteles");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.TipoDeTraslado", b =>
                {
                    b.Navigation("Traslados");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Usuario", b =>
                {
                    b.Navigation("GruposComoCoordinador");
                });
#pragma warning restore 612, 618
        }
    }
}
